name: Meshery Extension Test Reusable
on:
  workflow_call:
    inputs:
      pr_commit_sha:
        description: 'Commit SHA to test'
        required: true
        type: string
      pr_number:
        description: 'Pull request number'
        required: true
        type: string
      test_command:
        description: 'Test command to run'
        default: "make test"
        required: false
        type: string
    secrets:
      PROVIDER_TOKEN:
        required: true
      GH_ACCESS_TOKEN:
        required: true
      CYPRESS_RECORD_KEY:
        required: true
      LAYER5_CLOUD_USERNAME:
        required: true
      LAYER5_CLOUD_PASSWORD:
        required: true
      LAYER5_CLOUD_TESTING_BOT_EMAIL:
        required: true
      LAYER5_CLOUD_TESTING_BOT_PASSWORD:
        required: true

jobs:
  comment-starting-point:
    runs-on: ubuntu-24.04
    env:
      GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
      PR_NUMBER: ${{ inputs.pr_number }}
    steps:
      - name: comment starting point
        uses: hasura/comment-progress@v2.3.0
        with:
          github-token: ${{ secrets.GH_ACCESS_TOKEN }}
          repository: "layer5labs/meshery-extensions"
          number: ${{ inputs.pr_number }}
          id: extension-test
          message: "Starting [Meshery Extensions Test](https://github.com/layer5labs/meshery-extensions-packages/actions/runs/${{ github.run_id }})..."
          recreate: true
          append: false

  build-ui-and-server:
    uses: meshery/meshery/.github/workflows/build-ui-server-reusable-workflow.yml@master

  comment-success:
    runs-on: ubuntu-24.04
    needs: [build-ui-and-server]
    env:
      GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
      PR_NUMBER: ${{ inputs.pr_number }}
    steps:
      - name: comment success
        uses: ./.github/actions/extension-comment
        with:
          message: ":heavy_check_mark: Meshery UI and Meshery Server builds complete."

  build-meshery-extension:
    uses: ./.github/workflows/build-extension-reusable.yml
    secrets: inherit
    with:
      pr_commit_sha: ${{ inputs.pr_commit_sha }}
      pr_number: ${{ inputs.pr_number }}

  tests-ui-e2e:
    needs: [build-ui-and-server, build-meshery-extension]
    name: UI end-to-end tests
    runs-on: ubuntu-24.04
    env:
      GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
      PR_NUMBER: ${{ inputs.pr_number }}
    outputs:
      test-results: ${{ steps.test-results.outputs.artifact-url }}
    steps:
      - name: Checkout for composite action
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          sparse-checkout: |
            .github/actions/extension-comment
          sparse-checkout-cone-mode: false

      - name: Check out Meshery code
        uses: actions/checkout@v4
        with:
          repository: meshery/meshery
          fetch-depth: 1
          path: meshery

      - name: Check out meshery-consul code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          repository: layer5io/meshery-consul
          path: ./meshery-consul

      - name: comment success
        if: success()
        uses: ./.github/actions/extension-comment
        with:
          message: ":heavy_check_mark: Meshery and meshery-consul repository checkouts complete."
      - name: comment failure
        if: failure()
        uses: ./.github/actions/extension-comment
        with:
          message: ":x: Meshery and meshery-consul repository checkouts failed."

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: meshery
          path: meshery/server/cmd/

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ secrets.GO_VERSION }}

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ secrets.NODE_VERSION }}

      - name: comment success
        if: success()
        uses: ./.github/actions/extension-comment
        with:
          message: ":heavy_check_mark: Go and Node.js setup complete."
      - name: comment failure
        if: failure()
        uses: ./.github/actions/extension-comment
        with:
          message: ":x: Go and Node.js setup failed."

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.10.0
        with:
          cluster_name: "kind-cluster"

      - name: comment success
        if: success()
        uses: ./.github/actions/extension-comment
        with:
          message: ":heavy_check_mark: Kubernetes Kind cluster setup complete."
      - name: comment failure
        if: failure()
        uses: ./.github/actions/extension-comment
        with:
          message: ":x: Kubernetes Kind cluster setup failed."

      - name: Create a out/ folder in meshery ui
        run: |
          mkdir -p meshery/ui/out
          mkdir -p meshery/provider-ui/out/

      - name: Download Meshery-ui artifacts
        uses: actions/download-artifact@v4
        with:
          name: meshery-ui-build
          path: meshery/ui/out/

      - name: Download Meshery-provider-ui artifacts
        uses: actions/download-artifact@v4
        with:
          name: meshery-provider-ui build
          path: meshery/provider-ui/out/

      - name: Update /etc/hosts
        run: echo "127.0.0.1 mesherylocal.layer5.io" | sudo tee -a /etc/hosts

      - name: Run meshery-consul
        run: |
          mkdir -p /home/runner/.meshery/bin
          cd ./meshery-consul
          go run main.go &
          sleep 60

      - name: Set Release extensions
        run: |
          curl -s https://api.github.com/repos/layer5labs/meshery-extensions-packages/releases >> extension_releases.json
          export TAG=$(jq .[0].tag_name extension_releases.json)
          echo tag=$TAG >> $GITHUB_ENV
          echo $TAG

      - name: make directories
        run: |
          echo ${{env.tag}}
          echo ${{env}}
          mkdir -p /home/runner/.meshery/provider/Meshery/${{env.tag}}/provider/

      - name: Run backend
        working-directory: meshery
        env:
          PROVIDER_BASE_URLS: https://cloud.layer5.io
          PORT: 9081
          ADAPTER_URLS: "mesherylocal.layer5.io:10000 mesherylocal.layer5.io:10001 mesherylocal.layer5.io:10002 mesherylocal.layer5.io:10003 mesherylocal.layer5.io:10004 mesherylocal.layer5.io:10008 mesherylocal.layer5.io:10009 mesherylocal.layer5.io:10007"
        run: |
          cd server/cmd
          chmod +x ./main
          BUILD=${{env.tag}} ./main &

      - name: Download Meshery-extension-ui artifacts
        uses: actions/download-artifact@v4
        with:
          name: meshery-extension-ui
          path: provider

      - name: Move provider files
        run: |
          mv /home/runner/work/meshery-extensions-packages/meshery-extensions-packages/provider/ /home/runner/.meshery/provider/Meshery/${{env.tag}}/

      - name: comment success
        if: success()
        uses: ./.github/actions/extension-comment
        with:
          message: ":heavy_check_mark: Test environment setup complete."
      - name: comment failure
        if: failure()
        uses: ./.github/actions/extension-comment
        with:
          message: ":x: Test environment setup failed."

      - name: Checkout Meshery-extensions code
        uses: actions/checkout@v4
        with:
          repository: layer5labs/meshery-extensions
          path: ./meshery-extensions
          fetch-depth: 1
          ref: ${{ inputs.pr_commit_sha }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Install Meshery Extension dependencies
        working-directory: meshery-extensions
        run: cd meshmap; npm ci; cd ../

      - name: Install Playwright dependencies
        working-directory: meshery-extensions
        run: ls && make test-setup

      - name: comment success
        if: success()
        uses: ./.github/actions/extension-comment
        with:
          message: ":heavy_check_mark: Meshery Extensions dependencies installation complete."
      - name: comment failure
        if: failure()
        uses: ./.github/actions/extension-comment
        with:
          message: ":x: Meshery Extensions dependencies installation failed."

      - name: Run Tests
        id: run_tests
        working-directory: meshery-extensions
        run: |
          ${{ inputs.test_command }}
        env:
          PROVIDER_TOKEN: ${{ secrets.PROVIDER_TOKEN }}
          MESHERY_SERVER_URL: "http://localhost:9081"
          REMOTE_PROVIDER_URL: "https://cloud.layer5.io"
          REMOTE_PROVIDER_USER_EMAIL: ${{ secrets.LAYER5_CLOUD_TESTING_BOT_EMAIL }}
          REMOTE_PROVIDER_USER_PASSWORD: ${{ secrets.LAYER5_CLOUD_TESTING_BOT_PASSWORD }}

      - name: comment success
        if: success()
        uses: ./.github/actions/extension-comment
        with:
          message: ":heavy_check_mark: Meshery Extensions tests complete."
      - name: comment failure
        if: failure()
        uses: ./.github/actions/extension-comment
        with:
          message: ":x: Meshery Extensions tests failed."

      - name: Test reporter
        uses: actions/github-script@v7
        id: test-reports
        with:
          script: |
            const fs = require('fs')
            const E2ETestReporter = String(fs.readFileSync('./meshery-extensions/meshmap/test-report.md'))
            return E2ETestReporter
          result-encoding: string

      - name: comment test summary
        if: always()
        uses: ./.github/actions/extension-comment
        with:
          message: ${{ steps.test-reports.outputs.result }}

      - name: Upload test results
        id: test-results
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: meshery-extensions/meshmap/test-results/
          retention-days: 30

      - name: Upload relationship test results
        id: test-relationship-results
        if: ${{ !cancelled() && inputs.test_command == 'make test-relationship' }}
        uses: actions/upload-artifact@v4
        with:
          name: relationship-playwright-report
          path: meshery-extensions/meshmap/relationship-*.json
          retention-days: 30

      - name: Comment final status
        if: always()
        uses: ./.github/actions/extension-comment
        with:
          message: ":heavy_check_mark: Download Extension [test results](${{ steps.test-results.outputs.artifact-url }})."
